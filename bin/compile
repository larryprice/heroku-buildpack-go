#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_PATH=$(dirname $(dirname $(readlink -f "$0")))
VENV=$CACHE_DIR/venv

if [ ! -d "$CACHE_DIR" ]; then
  mkdir -p $CACHE_DIR
fi

# Shortcut to call virtualenv
virtualenv() {
  python "$BUILDPACK_PATH/vendor/virtualenv-1.9/virtualenv.py" "$@"
}

if [ -f "$BUILD_DIR/.goconfig" ]; then
  APP_PACKAGE=$(cat $BUILD_DIR/.goconfig)
else
  echo " !     Missing .goconfig file."
  exit 1
fi

# Setup GOPATH and GOROOT
GOPATH=$CACHE_DIR export GOPATH
GOROOT=$CACHE_DIR/go export GOROOT
PATH=$VENV/bin:$GOROOT/bin:$GOPATH/bin:$BUILDPACK_PATH/vendor/gpm:$PATH export PATH

if [ ! -d "$GOPATH/src" ]; then
  mkdir $GOPATH/src
fi

# Setting the app inside the GOPATH
APP_DIR=$GOPATH/src/$APP_PACKAGE/
if [ ! -d "$APP_DIR" ]; then
  mkdir -p $APP_DIR
fi
rm -rf $APP_DIR/*
cp -R $BUILD_DIR/* $APP_DIR

# Install Go 1.3
if [ ! -d "$CACHE_DIR/go" ]; then
  echo -n "-----> Installing latest GO (1.3)..."
  curl -s "https://storage.googleapis.com/golang/go1.3.linux-amd64.tar.gz" | tar xz
  mv go $CACHE_DIR/
  echo " done"
else
  echo "-----> Looks like GO is already installed"
fi

if ! (which hg >/dev/null && which bzr >/dev/null)
then
  # Install Bazzar and Mercurial
  echo -n "-----> Installing Virtualenv..."
  virtualenv --python python2.7 --distribute --prompt='(VENV) ' $VENV
  . $VENV/bin/activate
  echo " done"

  echo -n "-----> Installing Mercurial..."
  pip install mercurial
  echo " done"

  echo -n "-----> Installing Bazaar..."
  pip install bzr
  echo " done"
fi

# Build the application
cd $APP_DIR
echo -n "-----> Building..."
make stage
rm -rf $BUILD_DIR/out
mv out $BUILD_DIR/
echo " done"

mkdir -p $BUILD_DIR/.profile.d
echo 'PATH=$PATH:$HOME/out' > $BUILD_DIR/.profile.d/go.sh
